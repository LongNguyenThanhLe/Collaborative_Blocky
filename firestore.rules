rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Base rule - deny access by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // User's project references
      match /userProjects/{projectId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Collaborative rooms
    match /rooms/{roomId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                             (resource.data.createdBy == request.auth.uid || 
                              request.resource.data.createdBy == request.auth.uid);
      
      // Room user lists
      match /users/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Projects collection
    match /projects/{projectId} {
      // Helper function to check if user is a collaborator
      function isCollaborator() {
        return request.auth != null && 
          (resource.data.collaborators.hasAny([{'userId': request.auth.uid}]) || 
           resource.data.createdBy == request.auth.uid);
      }
      
      // Helper function to check if user is an editor or owner
      function canEdit() {
        return request.auth != null && 
          (resource.data.collaborators.hasAny([{'userId': request.auth.uid, 'role': 'editor'}]) || 
           resource.data.collaborators.hasAny([{'userId': request.auth.uid, 'role': 'owner'}]) || 
           resource.data.createdBy == request.auth.uid);
      }
      
      // Allow read if project is public or user is a collaborator
      allow read: if request.auth != null && 
                   (resource.data.isPublic == true || isCollaborator());
      
      // Allow create if authenticated
      allow create: if request.auth != null && 
                     request.resource.data.createdBy == request.auth.uid;
      
      // Allow update if user is an editor or owner
      allow update: if canEdit();
      
      // Allow delete only if user is the owner
      allow delete: if request.auth != null && 
                     (resource.data.createdBy == request.auth.uid || 
                      resource.data.collaborators.hasAny([{'userId': request.auth.uid, 'role': 'owner'}]));
    }
  }
}
